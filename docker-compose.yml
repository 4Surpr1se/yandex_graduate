version: '3'
services:

  database:
    image: postgres:16.3
    env_file: 
      - .env
    # only for debug
    #ports:
    #  - "5432:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
      - ./movies_database_dump.sql:/docker-entrypoint-initdb.d/dump.sql
    restart: always

  backend:
    build: src
    # ports:
    #   - "80:80"
    env_file: 
      - .env
    depends_on:
      - database
    restart: always

  redis:
    image: redis:7.4.0
    #ports:
    #  - "6379:6379"
    restart: always

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.2
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    # only for debug
    #ports:
    #  - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    restart: always

  postgres_to_es:
    build: postgres_to_es
    env_file: 
      - .env
    depends_on:
      - database
      - elasticsearch
    volumes:
      - ./state.json:/app/state.json
      - ./logs:/app/logs
    restart: always

  nginx:
    image: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/site.conf:/etc/nginx/conf.d/site.conf
    depends_on:
      - backend
    ports:
      - "80:80"

  tests:
    build: tests/functional
    env_file: 
      - .env
    entrypoint: >
      sh -c "pip install --no-cache-dir -r requirements.txt
      && python3 utils/wait_for_redis.py
      && python3 utils/wait_for_es.py
      && pytest src"
    depends_on:
      - backend
      - elasticsearch
      - redis

  auth_db:
    image: postgres:16.3
    container_name: auth_postgres
    env_file:
      - auth_service/src/.env
#    ports:
#      - "5433:5432"
    volumes:
      - ./auth_service/pg_auth_data:/var/lib/postgresql/data
      - ./auth_service/src/init.sql:/docker-entrypoint-initdb.d/init.sql

  auth_redis:
    image: redis:7.4.0
    restart: always

  auth_service:
    build:
      context: .
      dockerfile: auth_service/src/Dockerfile
    container_name: auth_service
    env_file:
      - auth_service/src/.env
    volumes:
      - ./auth_service:/app
    ports:
      - "8000:8000"
    depends_on:
      - auth_db


volumes:
  esdata:
    driver: local